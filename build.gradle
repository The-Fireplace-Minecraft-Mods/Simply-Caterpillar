plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaLanguageVersion.of(minecraftJavaVersion)
targetCompatibility = JavaLanguageVersion.of(minecraftJavaVersion)

archivesBaseName = "${modId}-fabric-${minecraftVersion}"
version = project.modVersion
group = project.mavenGroup

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraftVersion}"
	// mappings "net.fabricmc:yarn:${project.mappingsVersion}:v2"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.fabricLoaderVersion}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"

	modApi "me.shedaniel.cloth:cloth-config-fabric:${project.clothConfigVersion}"
	modApi "com.terraformersmc:modmenu:${project.modMenuVersion}"
}

processResources {
	inputs.property "version", project.version

	def buildProps = project.properties.clone()

	filesMatching(["fabric.mod.json", '*.mixins.json']) {
        expand buildProps
    }
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = JavaLanguageVersion.of(minecraftJavaVersion).asInt()
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			url "file://" + System.getenv("local_maven")
		}
	}
}
